#  $Id: project_tree_builder.ini 257950 2011-03-16 18:40:24Z ucko $
###############################################################################


#============================================================================
# Build tree configuration

[Configure]

#----------------------------------------------------------------------------
# Location of 3rd party libraries and applications
# Macros used here should be defined either in this section, or in [msvcNNN]
ThirdPartyBasePath     = \\\\snowman\\win-coremake\\Lib\\ThirdParty
ThirdPartyAppsBasePath = \\\\snowman\\win-coremake\\App\\ThirdParty
SWIG_PATH              = \\\\ncbipc0204\\swig

XCode_ThirdPartyBasePath = /netopt/ncbi_tools
XCode_DefaultLibsInc     = /sw/include
XCode_UserInc            = /usr/include

#----------------------------------------------------------------------------
# Location of NCBI C toolkit
# Macros used here should be defined either in this section, or in [msvcNNN]
ThirdParty_C_ncbi      = \\\\snowman\\win-coremake\\Lib\\Ncbi\\C\\$(msvc_3rd)\\c.current

#----------------------------------------------------------------------------
# Project makefile can have a list of requirements ('REQUIRES')
# If any one of these requirements is unrecognized by project tree builder (PTB)
# such a requirement is considered as not met, and the project is excluded from the build

# The following requirement are always met
ProvidedRequests = CXX_Toolkit \
                   LocalBZ2  \
                   LocalPCRE \
                   LocalZ    \
                   MT

# These requiremenst are also met
# Unlike 'ProvidedRequests', this list is also used when generating
# features_and_packages.txt file
StandardFeatures = MSWin MSVC DBLib FreeTDS algo app dbapi gui objects serial gbench -Cygwin in-house-resources

# The following requirement are never met
# If the same entry is present both in 'ProvidedRequests' and 'NotProvidedRequests'
# the latter one takes precedence (prohibition is more important than permission)
NotProvidedRequests = unix       \
                      GCC        \
                      KCC        \
                      ICC        \
                      VisualAge  \
                      CompaqCompiler \
                      WorkShop   \
                      MIPSpro    \
                      local_lbsm \
                      LocalSSS   \
                      SSSUTILS   \
                      MESA       \
                      GEO        \
                      SSSDB      \
                      SP

# Whether the following requirements are met or not is up to user
# One must use GUI tool to enable them
UserRequests = Ncbi-JNI Ncbi-Unicode

#----------------------------------------------------------------------------
# This file will be generated during the configuration process
# It contains macro definitions, which describe the availability
# of 3rd party libraries
DefinesPath = common\\config\\ncbiconf_msvc_site.h

# The following macros will be defined, or undefined
Defines     = HAVE_BERKELEY_DB \
              HAVE_BDB         \
              HAVE_BDB_CACHE   \
              HAVE_BOOST_TEST  \
              HAVE_CPPUNIT     \
              HAVE_ICU         \
              HAVE_FCGX_ACCEPT_R \
              HAVE_FLTK        \
              HAVE_LIBCONNEXT  \
              HAVE_LIBFASTCGI  \
              HAVE_LIBGIF      \
              HAVE_LIBGLEW     \
              HAVE_LIBGNUTLS   \
              HAVE_LIBJPEG     \
              HAVE_LIBLZO      \
              HAVE_LIBMUPARSER \
              HAVE_LIBOPENSSL  \
              HAVE_LIBPNG      \
              HAVE_LIBTIFF     \
              HAVE_LIBSQLITE3  \
              HAVE_LIBSYBASE   \
              HAVE_LIBXML      \
              HAVE_LIBXSLT     \
              HAVE_MYSQL       \
              HAVE_ODBC        \
              HAVE_ODBCSS_H    \
              HAVE_OPENGL      \
              HAVE_PUBSEQ_OS   \
              HAVE_PYTHON      \
              HAVE_SWIG        \
              HAVE_XALAN       \
              HAVE_XERCES      \
              USE_LOCAL_ZLIB   \
              USE_LOCAL_BZLIB  \
              USE_LOCAL_PCRE   \
              HAVE_SQLITE3ASYNC_H \
              HAVE_SQLITE3_UNLOCK_NOTIFY \
              NCBI_JNI


#----------------------------------------------------------------------------
# The definition of the following macros used in project makefiles
# depends on availability  of Components
# Each macro on the list has the section with the same name in this file
Macros = BDB_LIB BDB_CACHE_LIB NCBI_CRYPT CONNEXT XCONNEXT \
         ncbi_xreader_pubseqos ncbi_xreader_pubseqos2 UNLESS_PUBSEQOS \
         FASTCGI_OBJS DBAPI_CTLIB DBAPI_DBLIB DBAPI_MYSQL DBAPI_ODBC \
         LOCAL_LBSM

#----------------------------------------------------------------------------
# Some 3rd party libraries have analog in the toolkit.
# Depending on the availability of 3rd party library,
# the toolkit will use either external or internal one
# See section in this file with the name of the latter entry in each pair
LibChoices = z/Z bz2/BZ2 regexp/PCRE lzo/LZO
ComponentChoices = LocalZ/Z LocalBZ2/BZ2 LocalPCRE/PCRE

#----------------------------------------------------------------------------
# Some toolkit applications require 3rd party DLLs
# To make things easier, we copy these DLLs into our 'bin' folders

# This suffix is used when generating Makefile.third_party.mk,
# which is used in 3rd party libraries installation projects -
# third_party_static_install.vcproj and third_party_dll_install.vcproj
ThirdPartyLibsBinPathSuffix = _BINPATH

# Location of 'bin' directory of 3rd party libraries
# For example, see [FLTK] section in this file
# The 'bin' folder is at $(LIBPATH)\$(ThirdPartyLibsBinSubDir)
ThirdPartyLibsBinSubDir     = ..\\..\\bin

# 3rd party libraries to install
ThirdPartyLibsToInstall     = BerkeleyDB \
                              CPPUNIT    \
                              FLTK       \
                              GLEW       \
                              GNUTLS     \
                              LZO        \
                              MSSQL      \
                              MySQL      \
                              OpenSSL    \
                              SQLITE     \
                              SQLITE3    \
                              Sybase     \
                              wxWindows  \
                              wxWidgets  \
                              Xalan      \
                              Xerces     \
                              PYTHON     \
                              libxml     \
                              libxslt


#----------------------------------------------------------------------------
# Macros
# Macros used here should be defined either in this section, or in compiler specific section.

ThirdParty_BerkeleyDB = $(ThirdPartyBasePath)\\berkeleydb\\$(msvc_3rd)\\4.6.21.NC
ThirdParty_Boost_Test = $(ThirdPartyBasePath)\\boost_test\\$(msvc_3rd)\\1.42.0
ThirdParty_BZ2        = $(ThirdPartyBasePath)\\bzip2\\$(msvc_3rd)\\1.0.2
ThirdParty_CPPUNIT    = $(ThirdPartyBasePath)\\cppunit\\$(msvc_3rd)\\1.10.2
ThirdParty_fastcgi    = $(ThirdPartyBasePath)\\fastcgi\\$(msvc_3rd)\\2.4.0
ThirdParty_FLTK       = $(ThirdPartyBasePath)\\fltk\\$(msvc_3rd)\\1.1.6-ncbi9
ThirdParty_GIF        = $(ThirdPartyBasePath)\\gif\\$(msvc_3rd)\\4.1.3
ThirdParty_GLEW       = $(ThirdPartyBasePath)\\glew\\$(msvc_3rd)\\1.5.8
ThirdParty_GNUTLS     = $(ThirdPartyBasePath)\\gnutls\\$(msvc_3rd)\\2.4.2
ThirdParty_ICU        = $(ThirdPartyBasePath)\\icu\\$(msvc_3rd)\\3.2
ThirdParty_JPEG       = $(ThirdPartyBasePath)\\jpeg\\$(msvc_3rd)\\6b
ThirdParty_LZO        = $(ThirdPartyBasePath)\\lzo\\$(msvc_3rd)\\2.02
ThirdParty_MSSQL      = $(ThirdPartyBasePath)\\MSSQL\\$(msvc_3rd)\\8.0.1.94
ThirdParty_muParser   = $(ThirdPartyBasePath)\\muparser\\$(msvc_3rd)\\1.30
ThirdParty_MySQL      = $(ThirdPartyBasePath)\\mysql\\$(msvc_3rd)\\3.23.55
ThirdParty_OpenSSL    = $(ThirdPartyBasePath)\\openssl\\$(msvc_3rd)\\0.9.8k
ThirdParty_PCRE       = $(ThirdPartyBasePath)\\pcre\\$(msvc_3rd)\\7.9
ThirdParty_PNG        = $(ThirdPartyBasePath)\\png\\$(msvc_3rd)\\1.2.7
#ThirdParty_SQLITE     =
ThirdParty_SQLITE3    = $(ThirdPartyBasePath)\\sqlite\\$(msvc_3rd)\\3.6.14.2
ThirdParty_Sybase     = $(ThirdPartyBasePath)\\sybase\\$(msvc_3rd)\\12.5
ThirdParty_TIFF       = $(ThirdPartyBasePath)\\tiff\\$(msvc_3rd)\\3.6.1
ThirdParty_wxWidgets  = $(ThirdPartyBasePath)\\wxwidgets\\$(msvc_3rd)\\2.8.10
ThirdParty_wxWindows  = $(ThirdPartyBasePath)\\wxwin\\$(msvc_3rd)\\2.4.2
ThirdParty_Xalan      = $(ThirdPartyBasePath)\\xalan\\$(msvc_3rd)\\1.10.0-20080814
ThirdParty_Xerces     = $(ThirdPartyBasePath)\\xerces\\$(msvc_3rd)\\2.8.0
ThirdParty_XML        = $(ThirdPartyBasePath)\\xml\\$(msvc_3rd)\\2.7.3
ThirdParty_XSLT       = $(ThirdPartyBasePath)\\xslt\\$(msvc_3rd)\\1.1.24
ThirdParty_Z          = $(ThirdPartyBasePath)\\z\\$(msvc_3rd)\\1.2.3

PYTHON_PATH = $(ThirdPartyAppsBasePath)\\Python252\\$(msvc_3rd)


#============================================================================
# Source tree configuration

[ProjectTree]

# File with metadata used to resolve macros in project makefiles
MetaData        = build-system/Makefile.mk.in
CustomMetaData  = Makefile.*.mk
CustomConfH     = ncbiconf.*.h
CustomConfiguration = project_tree_builder.ini.custom

# All subdirectories of these ones will be excluded by default
ImplicitExclude =

# Names of source tree folders
include         = include
src             = src
dll             = dll
compilers       = compilers
projects        = scripts\\projects
impl            = impl

# File with this name must be present in all subdirectories of src
# It describes what to do in the current directory,
# and what subdirectories to process
TreeNode        = Makefile.in

# List of registered (allowed and prohibited) project tags
# Each project makefile can have 'PROJ_TAG' entry
# All tags present in the project tree MUST be described in 'ProjectTags' file
ProjectTags     = src\\build-system\\project_tags.txt


#============================================================================
# MSVC specific data

[msvc]

# File extension of MSVC specific makefile information
# For example: Makefile.<project_name>.lib.msvc
MakefilesExt   = msvc

# Name of the 'build' subdirectory
Projects       = build

# MSVC specific metadata
# It describes default settings of compiler, linker etc
MetaMakefile   = build-system\\Makefile.mk.in.msvc

#============================================================================
# Settings for MSVC 2008 (v.9.00, Win32)

[msvc900]
Version=9.00
# Build configurations
Configurations = DebugDLL,DebugMT,ReleaseDLL,ReleaseMT
DllConfigurations = DebugDLL ReleaseDLL
DllBuildDefine    = NCBI_DLL_BUILD
# Name of a subdirectory of 'compilers'
msvc_prj       = msvc900_prj
# Macro
msvc_3rd       = msvc9

#============================================================================
# Settings for MSVC 2008 (v.9.00, x64)

[msvc900.x64]
Version=9.00
# Build configurations
Configurations = DebugDLL,DebugMT,ReleaseDLL,ReleaseMT
DllConfigurations = DebugDLL ReleaseDLL
DllBuildDefine    = NCBI_DLL_BUILD
# Name of a subdirectory of 'compilers'
msvc_prj       = msvc900_prj
# Macro
msvc_3rd       = msvc9.64

#============================================================================
# Settings for MSVC 2010 (v.10.00, Win32)

[msvc1000]
Version=10.00
# Build configurations
Configurations = DebugDLL,DebugMT,ReleaseDLL,ReleaseMT
DllConfigurations = DebugDLL ReleaseDLL
DllBuildDefine    = NCBI_DLL_BUILD
# Name of a subdirectory of 'compilers'
msvc_prj       = msvc1000_prj
# Macro
msvc_3rd       = msvc10

#============================================================================
# Settings for MSVC 2010 (v.10.00, x64)

[msvc1000.x64]
Version=10.00
# Build configurations
Configurations = DebugDLL,DebugMT,ReleaseDLL,ReleaseMT
DllConfigurations = DebugDLL ReleaseDLL
DllBuildDefine    = NCBI_DLL_BUILD
# Name of a subdirectory of 'compilers'
msvc_prj       = msvc1000_prj
# Macro
msvc_3rd       = msvc10.64

#============================================================================
# Settings for UNIX platforms

[unix]
Configurations = Debug,DebugDLL,DebugMT,Release,ReleaseDLL,ReleaseMT
DllConfigurations = DebugDLL ReleaseDLL
DllBuildDefine    = NCBI_DLL_BUILD
# File with resolved macros in project makefiles
# generated by configure script on Unix only
MetaData        = Makefile.mk

#============================================================================
# Settings for XCODE (MacOS)

[PlatformSynonyms_Darwin]
arch = i386,i486,i586:i686
os = Darwin:darwin

[xcode]
# File extension of XCODE specific makefile information
# For example: Makefile.<project_name>.lib.xcode
MakefilesExt   = xcode

# Name of the 'build' subdirectory
Projects       = build

# XCODE specific metadata
# It describes default settings of compiler, linker etc
MetaMakefile   = build-system/Makefile.mk.in.xcode

StandardFeatures = unix Darwin XCODE GCC DBLib algo app dbapi gui objects serial gbench FreeTDS
NotProvidedRequests = MSWin MSVC KCC ICC VisualAge CompaqCompiler WorkShop MIPSpro LocalSSS SSSUTILS MESA GEO SSSDB SP ODBC
DefinesPath = common/config/ncbiconf_xcode_site.h


ThirdParty_BerkeleyDB = $(XCode_ThirdPartyBasePath)/BerkeleyDB
ThirdParty_Boost_Test = $(XCode_ThirdPartyBasePath)/boost
ThirdParty_FLTK       = $(XCode_ThirdPartyBasePath)/fltk-1.1.6-ncbi9
ThirdParty_JPEG       = $(XCode_ThirdPartyBasePath)/safe-sw/lib
ThirdParty_JPEG_INC   = $(XCode_DefaultLibsInc)
ThirdParty_PNG        = $(XCode_ThirdPartyBasePath)/safe-sw/lib
ThirdParty_TIFF       = $(XCode_ThirdPartyBasePath)/safe-sw/lib
#ThirdParty_LZO        = $(XCode_ThirdPartyBasePath)/lzo1
ThirdParty_SQLITE     = $(XCode_ThirdPartyBasePath)/sqlite2
ThirdParty_SQLITE3    = $(XCode_ThirdPartyBasePath)/sqlite-3.6.14.2-ncbi1
ThirdParty_XML        = $(XCode_ThirdPartyBasePath)/libxml-2.7.3
ThirdParty_XSLT       = $(XCode_ThirdPartyBasePath)/libxml-2.7.3

LIBXML_INCLUDE   = $(ThirdParty_XML)/include/libxml2
LIBXSLT_INCLUDE  = $(ThirdParty_XSLT)/include

SRA_INCLUDE = ../src/sra/sdk/interfaces ../src/internal/sra/sdk/interfaces

[xcode30]
Version=44
Configurations = DebugDLL,DebugMT,ReleaseDLL,ReleaseMT
DllConfigurations = DebugDLL ReleaseDLL
DllBuildDefine    = NCBI_DLL_BUILD
msvc_prj       = xcode30_prj


#============================================================================
# Additional include directories for LibChoices

[LibChoicesIncludes]
CMPRS_INCLUDE = z   util/compress/zlib/    \
                bz2 util/compress/bzip2/   \
                lzo .
Z_INCLUDE = z util/compress/zlib/
BZ2_INCLUDE = bz2 util/compress/bzip2/
LZO_INCLUDE = lzo .
PCRE_INCLUDE = regexp util/regexp/


#============================================================================
# Defines for CPPFLAGS and other macros in project makefiles
# Macros used here should be defined either in [Configure], or in compiler specific section.
# Predefined macros: incdir

[Defines]
# Additional include directory
NCBI_C_INCLUDE = $(ThirdParty_C_ncbi)\\include

# Additional libraries
NCBI_C_ncbi      = blast ddvlib medarch ncbi ncbiacc ncbicdr   \
                   ncbicn3d ncbicn3d_ogl ncbidesk ncbiid1      \
                   ncbimain ncbimmdb ncbinacc ncbiobj ncbispel \
                   ncbitool ncbitxc2 netblast netcli netentr   \
                   regexp smartnet vibgif vibnet vibrant       \
                   vibrant_ogl xconntest
BZ2_LIB          = bz2
Z_LIB            = z
LZO_LIB          = lzo
PCRE_LIB         = regexp

ftds64           = ftds
FTDS64_INCLUDE   = dbapi/driver/ftds64/ dbapi/driver/ftds64/freetds/
FTDS64_LIB       = sybdb_ftds64 tds_ftds64
FTDS64_CTLIB_LIB = ct_ftds64 tds_ftds64

FTDS_INCLUDE     = dbapi/driver/ftds64/ dbapi/driver/ftds64/freetds/
FTDS_LIB         = ct_ftds64 tds_ftds64
FTDS_LIBS        =

TLS_INCLUDE      = $(ThirdParty_OpenSSL)/include

LIBXML_INCLUDE   = $(ThirdParty_XML)\\include
LIBXSLT_INCLUDE  = $(ThirdParty_XSLT)\\include

SYBASE_PATH = $(ThirdParty_Sybase)\\Sybase

NCBI_SSS_INCLUDE = $(incdir)\\sss

FASTCGI_INCLUDE  = $(ThirdParty_fastcgi)\\include

top_srcdir = $(rootdir)
build_root = $:?<


#============================================================================
# Build configuration settings:
[Debug]
debug                  = TRUE
runtimeLibraryOption   = 5

[DebugDLL]
debug=TRUE
runtimeLibraryOption=3

[DebugMT]
debug=TRUE
runtimeLibraryOption=1

[Release]
debug=FALSE
runtimeLibraryOption=4

[ReleaseDLL]
debug=FALSE
runtimeLibraryOption=2

[ReleaseMT]
debug=FALSE
runtimeLibraryOption=0


#============================================================================
# Definitions of these macros (section names) depend on availability of Components

[HAVE_OPENGL]
Component=OpenGL

[HAVE_ODBC]
Component=ODBC

[HAVE_ODBCSS_H]
Component=ODBC

[HAVE_LIBJPEG]
Component=JPEG
[JPEG_LIBS]
Component=JPEG

[HAVE_LIBTIFF]
Component=TIFF,Z
[TIFF_LIBS]
Component=TIFF,Z

[HAVE_LIBPNG]
Component=PNG,Z
[PNG_LIBS]
Component=PNG,Z

[HAVE_LIBGIF]
Component=GIF
[GIF_LIBS]
Component=GIF

[HAVE_LIBGLEW]
Component=GLEW
[GLEW_LIBS]
Component=GLEW

[HAVE_LIBLZO]
Component=LZO
[LZO_LIBS]
Component=LZO

#[HAVE_LIBZ]
#Component=Z

[HAVE_LIBGNUTLS]
Component=GNUTLS
[GNUTLS_LIBS]
Component=GNUTLS

[Z_LIBS]
Component=Z

[BZ2_LIBS]
Component=BZ2

[PCRE_LIBS]
Component=PCRE

[LIBS]
Component=

[NCBI_C_LIBS]
Component=C_ncbi

[C-Toolkit]
Component=C_ncbi

[HAVE_BDB]
Component = BerkeleyDB bdb

[bdb]
Component = BerkeleyDB bdb
FILES = src\\db\\bdb\\Makefile.bdb.lib
CONFS = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL

[ctools]
Component=C_ncbi ctools
FILES = src\\ctools\\Makefile.ctools.lib
CONFS = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL

[BDB_LIB]
Component = BerkeleyDB bdb
Value     = bdb

[NCBI_CRYPT]
Component = ncbi_crypt
Value     = ncbi_crypt
DefValue  = ncbi_crypt_stub

[CONNEXT]
Component= connext
Value    = connext

[XCONNEXT]
Component= connext
Value    = xconnext

[HAVE_BDB_CACHE]
Component = BerkeleyDB

[BDB_CACHE_LIB]
Component = BerkeleyDB
Value     = ncbi_xcache_bdb

[HAVE_FLTK]
Component=FLTK

[FLTK_LIBS_GL]
Component=FLTK, COMCTL32

[FLTK_LIBS]
Component=FLTK, COMCTL32

[FLTK_LIBS_ALL]
Component=FLTK, COMCTL32

[HAVE_BERKELEY_DB]
Component=BerkeleyDB

[HAVE_PYTHON]
Component=PYTHON

[HAVE_SWIG]
Component=SWIG

[HAVE_LIBCONNEXT]
Component=connext

[HAVE_CPPUNIT]
Component=CPPUNIT

[HAVE_XALAN]
Component=Xalan

[HAVE_ICU]
Component=ICU

[HAVE_XERCES]
Component=Xerces

[USE_LOCAL_ZLIB]
Component = LocalZ
[USE_LOCAL_BZLIB]
Component = LocalBZ2
[USE_LOCAL_PCRE]
Component = LocalPCRE

[HAVE_BOOST_TEST]
Component=Boost.Test

[BOOST_TEST_UTF_LIBS]
Component=Boost.Test

[HAVE_LIBOPENSSL]
Component=OpenSSL

[TLS_LIBS]
Component=OpenSSL

[SYBASE_LIBS]
Component=SybaseCTLIB

[SYBASE_DBLIBS]
Component=SybaseDBLIB

[MYSQL_LIBS]
Component=MySQL

[SQLITE3_LIBS]
Component=SQLITE3

[ODBC_LIBS]
Component=ODBC

[HAVE_LIBXML]
Component=LIBXML

[HAVE_LIBXSLT]
Component=LIBXSLT

[HAVE_PUBSEQ_OS]
Component=PubSeqOS, Sybase
[UNLESS_PUBSEQOS]
Component=PubSeqOS, Sybase
Value="#"
[ncbi_xreader_pubseqos]
Component=PubSeqOS, Sybase
Value=ncbi_xreader_pubseqos
[ncbi_xreader_pubseqos2]
Component=PubSeqOS, Sybase
Value=ncbi_xreader_pubseqos2

[HAVE_LIBFASTCGI]
Component=fastcgi

[FASTCGI_LIBS]
Component=fastcgi

[HAVE_FCGX_ACCEPT_R]
Component=fastcgi

[FASTCGI_OBJS]
Component=fastcgi
Value=fcgibuf

[DBAPI_CTLIB]
Component=Sybase
Value=ncbi_xdbapi_ctlib

[DBAPI_DBLIB]
Component=Sybase
Value=ncbi_xdbapi_dblib

[DBAPI_MYSQL]
Component=MySQL
Value=ncbi_xdbapi_mysql

[DBAPI_ODBC]
Component=ODBC
Value=ncbi_xdbapi_odbc

[LOCAL_LBSM]
Component = local_lbsm
Value     = ncbi_lbsm ncbi_lbsm_ipc ncbi_lbsmd
DefValue  = ncbi_lbsmd_stub

[HAVE_LIBSYBASE]
Component=Sybase

[HAVE_MYSQL]
Component=MySQL

[HAVE_LIBSQLITE3]
Component=SQLITE3

[FTDS64_CTLIB_LIBS]
Component=Iconv
[ICONV_LIBS]
Component=Iconv
[FTDS64_LIBS]
Component=Iconv

[FTDS_CTLIB_LIBS]
Component=Iconv
[FTDS_LIBS]
Component=Iconv

[UUID_LIBS]
Component=UUID

[NCBI_JNI]
Component = Ncbi-JNI

#============================================================================
# Description of Components (non-toolkit libraries)
# Each description defines
#   available configurations        CONFS
#   additional include directories  INCLUDE
#   additional library directories  LIBPATH
#   preprocessor definitions        DEFINES
#   additional libraries            LIB

[wxWindows]
INCLUDE = $(ThirdParty_wxWindows)\\include
LIB     = wx.lib jpeg.lib png.lib regex.lib tiff.lib zlib.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[wxWindows.debug]
DEFINES=__WXMSW__,__WIN32__,_WINDOWS,__WINDOWS__,WINVER=0x0400,__WXDEBUG__=1,NCBI_WXWIN_USE_PCH
[wxWindows.debug.Debug]
LIBPATH = $(ThirdParty_wxWindows)\\lib_static\\debug
[wxWindows.debug.DebugMT]
LIBPATH = $(ThirdParty_wxWindows)\\lib_static\\debugmt
[wxWindows.debug.DebugDLL]
DEFINES=__WXMSW__,__WIN32__,_WINDOWS,__WINDOWS__,WINVER=0x0400,__WXDEBUG__=1,WXUSINGDLL=1,NCBI_WXWIN_USE_PCH
LIBPATH = $(ThirdParty_wxWindows)\\lib_dll\\debugdll
[wxWindows.release]
DEFINES=__WXMSW__,__WIN32__,_WINDOWS,__WINDOWS__,WINVER=0x0400,NCBI_WXWIN_USE_PCH
[wxWindows.release.Release]
LIBPATH = $(ThirdParty_wxWindows)\\lib_static\\release
[wxWindows.release.ReleaseMT]
LIBPATH = $(ThirdParty_wxWindows)\\lib_static\\releasemt
[wxWindows.release.ReleaseDLL]
DEFINES=__WXMSW__,__WIN32__,_WINDOWS,__WINDOWS__,WINVER=0x0400,WXUSINGDLL=1,NCBI_WXWIN_USE_PCH
LIBPATH = $(ThirdParty_wxWindows)\\lib_dll\\releasedll


[wxWidgets]
INCLUDE = $(ThirdParty_wxWidgets)\\include $(ThirdParty_wxWidgets)\\include\\msvc
LIB     = wxbase.lib wxmsw_core.lib wxmsw_gl.lib wxmsw_html.lib wxmsw_aui.lib wxmsw_adv.lib wxmsw_richtext.lib wxjpeg.lib wxpng.lib wxregex.lib wxtiff.lib wxzlib.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
DEFINES = __WXMSW__,NCBI_WXWIN_USE_PCH
[wxWidgets.debug.Debug]
LIBPATH = $(ThirdParty_wxWidgets)\\lib_static\\debug
[wxWidgets.debug.DebugMT]
LIBPATH = $(ThirdParty_wxWidgets)\\lib_static\\debugmt
[wxWidgets.debug.DebugDLL]
DEFINES = __WXMSW__,NCBI_WXWIN_USE_PCH,WXUSINGDLL=1
LIBPATH = $(ThirdParty_wxWidgets)\\lib_dll\\debugdll
[wxWidgets.release.Release]
LIBPATH = $(ThirdParty_wxWidgets)\\lib_static\\release
[wxWidgets.release.ReleaseMT]
LIBPATH = $(ThirdParty_wxWidgets)\\lib_static\\releasemt
[wxWidgets.release.ReleaseDLL]
DEFINES = __WXMSW__,NCBI_WXWIN_USE_PCH,WXUSINGDLL=1
LIBPATH = $(ThirdParty_wxWidgets)\\lib_dll\\releasedll
[wxWidgets.debug.Unicode_DebugDLL]
INCLUDE = $(ThirdParty_wxWidgets)u\\include $(ThirdParty_wxWidgets)u\\include\\msvc
DEFINES = __WXMSW__,NCBI_WXWIN_USE_PCH,WXUSINGDLL=1
LIBPATH = $(ThirdParty_wxWidgets)u\\lib_dll\\debugdll
[wxWidgets.release.Unicode_ReleaseDLL]
INCLUDE = $(ThirdParty_wxWidgets)u\\include $(ThirdParty_wxWidgets)u\\include\\msvc
DEFINES = __WXMSW__,NCBI_WXWIN_USE_PCH,WXUSINGDLL=1
LIBPATH = $(ThirdParty_wxWidgets)u\\lib_dll\\releasedll


[PNG]
INCLUDE = $(ThirdParty_PNG)\\include
LIB     = libpng.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[PNG.debug.Debug]
LIBPATH = $(ThirdParty_PNG)\\lib_static\\debug
[PNG.debug.DebugMT]
LIBPATH = $(ThirdParty_PNG)\\lib_static\\debugmt
[PNG.debug.DebugDLL]
LIBPATH = $(ThirdParty_PNG)\\lib_static\\debugdll
[PNG.release.Release]
LIBPATH = $(ThirdParty_PNG)\\lib_static\\release
[PNG.release.ReleaseMT]
LIBPATH = $(ThirdParty_PNG)\\lib_static\\releasemt
[PNG.release.ReleaseDLL]
LIBPATH = $(ThirdParty_PNG)\\lib_static\\releasedll
[PNG.xcode]
LIB = -lpng
LIBPATH = $(ThirdParty_PNG)


[GIF]
INCLUDE = $(ThirdParty_GIF)\\include
LIB     = libgif.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[GIF.debug.Debug]
LIBPATH = $(ThirdParty_GIF)\\lib_static\\debug
[GIF.debug.DebugMT]
LIBPATH = $(ThirdParty_GIF)\\lib_static\\debugmt
[GIF.debug.DebugDLL]
LIBPATH = $(ThirdParty_GIF)\\lib_static\\debugdll
[GIF.release.Release]
LIBPATH = $(ThirdParty_GIF)\\lib_static\\release
[GIF.release.ReleaseMT]
LIBPATH = $(ThirdParty_GIF)\\lib_static\\releasemt
[GIF.release.ReleaseDLL]
LIBPATH = $(ThirdParty_GIF)\\lib_static\\releasedll
[GIF.xcode]
LIB =


[GLEW]
INCLUDE = $(ThirdParty_GLEW)\\include
LIB     = glew32mx.lib
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
[GLEW.debug.DebugMT]
LIBPATH = $(ThirdParty_GLEW)\\lib_static\\debugmt
DEFINES = GLEW_MX,GLEW_STATIC
[GLEW.debug.DebugDLL]
LIBPATH = $(ThirdParty_GLEW)\\lib_dll\\debugdll
DEFINES = GLEW_MX
[GLEW.release.ReleaseMT]
LIBPATH = $(ThirdParty_GLEW)\\lib_static\\releasemt
DEFINES = GLEW_MX,GLEW_STATIC
[GLEW.release.ReleaseDLL]
LIBPATH = $(ThirdParty_GLEW)\\lib_dll\\releasedll
DEFINES = GLEW_MX


[GNUTLS]
INCLUDE = $(ThirdParty_GNUTLS)\\include
LIB     = libgcrypt-11.lib libgnutls-openssl-26.lib libgnutls-extra-26.lib libgnutls-26.lib
CONFS   = DebugDLL ReleaseDLL
[GNUTLS.debug.DebugDLL]
LIBPATH = $(ThirdParty_GNUTLS)\\lib_dll\\debugdll
[GNUTLS.release.ReleaseDLL]
LIBPATH = $(ThirdParty_GNUTLS)\\lib_dll\\releasedll


[TIFF]
INCLUDE = $(ThirdParty_TIFF)\\include
LIB     = libtiff.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[TIFF.debug.Debug]
LIBPATH = $(ThirdParty_TIFF)\\lib_static\\debug
[TIFF.debug.DebugMT]
LIBPATH = $(ThirdParty_TIFF)\\lib_static\\debugmt
[TIFF.debug.DebugDLL]
LIBPATH = $(ThirdParty_TIFF)\\lib_static\\debugdll
[TIFF.release.Release]
LIBPATH = $(ThirdParty_TIFF)\\lib_static\\release
[TIFF.release.ReleaseMT]
LIBPATH = $(ThirdParty_TIFF)\\lib_static\\releasemt
[TIFF.release.ReleaseDLL]
LIBPATH = $(ThirdParty_TIFF)\\lib_static\\releasedll
[TIFF.xcode]
LIB = -ltiff
LIBPATH = $(ThirdParty_TIFF)


[JPEG]
INCLUDE = $(ThirdParty_JPEG)\\include
LIB     = libjpeg.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[JPEG.debug.Debug]
LIBPATH = $(ThirdParty_JPEG)\\lib_static\\debug
[JPEG.debug.DebugMT]
LIBPATH = $(ThirdParty_JPEG)\\lib_static\\debugmt
[JPEG.debug.DebugDLL]
LIBPATH = $(ThirdParty_JPEG)\\lib_static\\debugdll
[JPEG.release.Release]
LIBPATH = $(ThirdParty_JPEG)\\lib_static\\release
[JPEG.release.ReleaseMT]
LIBPATH = $(ThirdParty_JPEG)\\lib_static\\releasemt
[JPEG.release.ReleaseDLL]
LIBPATH = $(ThirdParty_JPEG)\\lib_static\\releasedll
[JPEG.xcode]
INCLUDE = $(ThirdParty_JPEG_INC)
LIB = -ljpeg
LIBPATH = $(ThirdParty_JPEG)


[BZ2]
INCLUDE = $(ThirdParty_BZ2)\\include
LIB     = libbzip2.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[BZ2.debug.Debug]
LIBPATH = $(ThirdParty_BZ2)\\lib_static\\debug
[BZ2.debug.DebugMT]
LIBPATH = $(ThirdParty_BZ2)\\lib_static\\debugmt
[BZ2.debug.DebugDLL]
LIBPATH = $(ThirdParty_BZ2)\\lib_static\\debugdll
[BZ2.release.Release]
LIBPATH = $(ThirdParty_BZ2)\\lib_static\\release
[BZ2.release.ReleaseMT]
LIBPATH = $(ThirdParty_BZ2)\\lib_static\\releasemt
[BZ2.release.ReleaseDLL]
LIBPATH = $(ThirdParty_BZ2)\\lib_static\\releasedll


[Z]
INCLUDE = $(ThirdParty_Z)\\include
LIB     = libz.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[Z.debug.Debug]
LIBPATH = $(ThirdParty_Z)\\lib_static\\debug
[Z.debug.DebugMT]
LIBPATH = $(ThirdParty_Z)\\lib_static\\debugmt
[Z.debug.DebugDLL]
LIBPATH = $(ThirdParty_Z)\\lib_static\\debugdll
[Z.release.Release]
LIBPATH = $(ThirdParty_Z)\\lib_static\\release
[Z.release.ReleaseMT]
LIBPATH = $(ThirdParty_Z)\\lib_static\\releasemt
[Z.release.ReleaseDLL]
LIBPATH = $(ThirdParty_Z)\\lib_static\\releasedll


[LZO]
INCLUDE = $(ThirdParty_LZO)\\include
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
LIB     = liblzo.lib
[LZO.debug.Debug]
LIBPATH = $(ThirdParty_LZO)\\lib_static\\debug
[LZO.debug.DebugMT]
LIBPATH = $(ThirdParty_LZO)\\lib_static\\debugmt
[LZO.debug.DebugDLL]
LIBPATH = $(ThirdParty_LZO)\\lib_static\\debugdll
[LZO.release.Release]
LIBPATH = $(ThirdParty_LZO)\\lib_static\\release
[LZO.release.ReleaseMT]
LIBPATH = $(ThirdParty_LZO)\\lib_static\\releasemt
[LZO.release.ReleaseDLL]
LIBPATH = $(ThirdParty_LZO)\\lib_static\\releasedll
[LZO.xcode]
INCLUDE = $(ThirdParty_LZO)/include
LIB     = -llzo
LIBPATH = $(ThirdParty_LZO)/lib


[muParser]
INCLUDE = $(ThirdParty_muParser)\\include
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
LIB     = muparser.lib
[muParser.debug.DebugMT]
LIBPATH = $(ThirdParty_muParser)\\lib_static\\debugmt
[muParser.debug.DebugDLL]
LIBPATH = $(ThirdParty_muParser)\\lib_static\\debugdll
[muParser.release.ReleaseMT]
LIBPATH = $(ThirdParty_muParser)\\lib_static\\releasemt
[muParser.release.ReleaseDLL]
LIBPATH = $(ThirdParty_muParser)\\lib_static\\releasedll
[muParser.xcode]
INCLUDE = $(ThirdParty_muParser)/include
LIB     = -lmuparser
LIBPATH = $(ThirdParty_muParser)/lib

[HAVE_LIBMUPARSER]
Component=muParser
[MUPARSER_LIBS]
Component=muParser


[PCRE]
INCLUDE = $(ThirdParty_PCRE)\\include
DEFINES = PCRE_STATIC,NOPOSIX
LIB     = libpcre.lib
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
[PCRE.debug.DebugMT]
LIBPATH = $(ThirdParty_PCRE)\\lib_static\\debugmt
[PCRE.debug.DebugDLL]
LIBPATH = $(ThirdParty_PCRE)\\lib_static\\debugdll
[PCRE.release.ReleaseMT]
LIBPATH = $(ThirdParty_PCRE)\\lib_static\\releasemt
[PCRE.release.ReleaseDLL]
LIBPATH = $(ThirdParty_PCRE)\\lib_static\\releasedll


[SQLITE]
INCLUDE = $(ThirdParty_SQLITE)\\include
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
LIB     = sqlite.lib
[SQLITE.debug.Debug]
LIBPATH = $(ThirdParty_SQLITE)\\lib_static\\debug
[SQLITE.debug.DebugMT]
LIBPATH = $(ThirdParty_SQLITE)\\lib_static\\debugmt
[SQLITE.debug.DebugDLL]
LIBPATH = $(ThirdParty_SQLITE)\\lib_dll\\debugdll
[SQLITE.release.Release]
LIBPATH = $(ThirdParty_SQLITE)\\lib_static\\release
[SQLITE.release.ReleaseMT]
LIBPATH = $(ThirdParty_SQLITE)\\lib_static\\releasemt
[SQLITE.release.ReleaseDLL]
LIBPATH = $(ThirdParty_SQLITE)\\lib_dll\\releasedll
[SQLITE.xcode]
INCLUDE = $(ThirdParty_SQLITE)/include
LIB     = -lsqlite
LIBPATH = $(ThirdParty_SQLITE)/lib


[SQLITE3]
INCLUDE = $(ThirdParty_SQLITE3)\\include
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
LIB     = sqlite3.lib
[SQLITE3.debug.Debug]
LIBPATH = $(ThirdParty_SQLITE3)\\lib_static\\debugmt
[SQLITE3.debug.DebugMT]
LIBPATH = $(ThirdParty_SQLITE3)\\lib_static\\debugmt
[SQLITE3.debug.DebugDLL]
LIBPATH = $(ThirdParty_SQLITE3)\\lib_static\\debugdll
[SQLITE3.release.Release]
LIBPATH = $(ThirdParty_SQLITE3)\\lib_static\\releasemt
[SQLITE3.release.ReleaseMT]
LIBPATH = $(ThirdParty_SQLITE3)\\lib_static\\releasemt
[SQLITE3.release.ReleaseDLL]
LIBPATH = $(ThirdParty_SQLITE3)\\lib_static\\releasedll
[SQLITE3.xcode]
INCLUDE = $(ThirdParty_SQLITE3)/include
LIB     = -lsqlite3
LIBPATH = $(ThirdParty_SQLITE3)/lib

[HAVE_SQLITE3_UNLOCK_NOTIFY]
Component = SQLITE3
# Not exactly the right check but for simple difference inside-outside NCBI
# it will work.
FILES     = $(ThirdParty_SQLITE3)\\include\\sqlite3async.h

[HAVE_SQLITE3ASYNC_H]
Component = SQLITE3
FILES     = $(ThirdParty_SQLITE3)\\include\\sqlite3async.h


[Sybase]
INCLUDE = $(ThirdParty_Sybase)\\include
LIBPATH =
LIB     = libsybdb.lib libct.lib libblk.lib libcs.lib
;LIB=
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[Sybase.debug.Debug]
LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\debug
[Sybase.debug.DebugMT]
LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\debugmt
[Sybase.debug.DebugDLL]
LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\debugdll
[Sybase.release.Release]
LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\release
[Sybase.release.ReleaseMT]
LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\releasemt
[Sybase.release.ReleaseDLL]
LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\releasedll


[SybaseDBLIB]
INCLUDE = $(ThirdParty_Sybase)\\include
LIBPATH =
LIB     = libsybdb.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[SybaseDBLIB.debug.Debug]
LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\debug
[SybaseDBLIB.debug.DebugMT]
LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\debugmt
[SybaseDBLIB.debug.DebugDLL]
LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\debugdll
[SybaseDBLIB.release.Release]
LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\release
[SybaseDBLIB.release.ReleaseMT]
LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\releasemt
[SybaseDBLIB.release.ReleaseDLL]
LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\releasedll


[SybaseCTLIB]
INCLUDE = $(ThirdParty_Sybase)\\include
LIBPATH =
LIB     = libct.lib libblk.lib libcs.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[SybaseCTLIB.debug.Debug]
LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\debug
[SybaseCTLIB.debug.DebugMT]
LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\debugmt
[SybaseCTLIB.debug.DebugDLL]
LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\debugdll
[SybaseCTLIB.release.Release]
LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\release
[SybaseCTLIB.release.ReleaseMT]
LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\releasemt
[SybaseCTLIB.release.ReleaseDLL]
LIBPATH = $(ThirdParty_Sybase)\\lib_dll\\releasedll


[MySQL]
INCLUDE = $(ThirdParty_MySQL)\\include
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
[MySQL.debug.DebugMT]
LIBPATH = $(ThirdParty_MySQL)\\lib_static\\DebugMT
LIB     = libmySQL.lib
[MySQL.debug.DebugDLL]
LIBPATH = $(ThirdParty_MySQL)\\lib_dll\\DebugDLL
LIB     = libmySQL.lib
[MySQL.release.ReleaseMT]
LIBPATH = $(ThirdParty_MySQL)\\lib_static\\ReleaseMT
LIB     = libmySQL.lib
[MySQL.release.ReleaseDLL]
LIBPATH = $(ThirdParty_MySQL)\\lib_dll\\ReleaseDLL
LIB     = libmySQL.lib


[ODBC]
INCLUDE =
LIBPATH =
LIB     = odbc32.lib odbccp32.lib odbcbcp.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL


[MSSQL]
INCLUDE = $(ThirdParty_MSSQL)\\include
LIBPATH =
LIB     = NTWDBLIB.LIB
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[MSSQL.debug.Debug]
LIBPATH = $(ThirdParty_MSSQL)\\lib_dll\\debug
[MSSQL.debug.DebugMT]
LIBPATH = $(ThirdParty_MSSQL)\\lib_dll\\debugmt
[MSSQL.debug.DebugDLL]
LIBPATH = $(ThirdParty_MSSQL)\\lib_dll\\debugdll
[MSSQL.release.Release]
LIBPATH = $(ThirdParty_MSSQL)\\lib_dll\\release
[MSSQL.release.ReleaseMT]
LIBPATH = $(ThirdParty_MSSQL)\\lib_dll\\releasemt
[MSSQL.release.ReleaseDLL]
LIBPATH = $(ThirdParty_MSSQL)\\lib_dll\\releasedll


[DBLib]
INCLUDE =
LIBPATH =
LIB     =
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL


[OpenGL]
INCLUDE =
LIBPATH =
LIB     = opengl32.lib glu32.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[OpenGL.xcode]
INCLUDE =
LIBPATH =
LIB     = -framework OpenGL


[FLTK]
INCLUDE = $(ThirdParty_FLTK)\\include
DEFINES =
LIBPATH =
LIB     =
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[FLTK.debug.Debug]
DEFINES =
LIBPATH = $(ThirdParty_FLTK)\\lib_static\\debug
LIB     = fltk.lib fltkgl.lib fltkimages.lib fltkforms.lib
[FLTK.debug.DebugMT]
DEFINES =
LIBPATH = $(ThirdParty_FLTK)\\lib_static\\debugmt
LIB     = fltk.lib fltkgl.lib fltkimages.lib fltkforms.lib
[FLTK.debug.DebugDLL]
DEFINES = FL_DLL
LIBPATH = $(ThirdParty_FLTK)\\lib_dll\\debugdll
LIB     = fltkdll.lib
[FLTK.release.Release]
DEFINES =
LIBPATH = $(ThirdParty_FLTK)\\lib_static\\release
LIB     = fltk.lib fltkgl.lib fltkimages.lib fltkforms.lib
[FLTK.release.ReleaseMT]
DEFINES =
LIBPATH = $(ThirdParty_FLTK)\\lib_static\\releasemt
LIB     = fltk.lib fltkgl.lib fltkimages.lib fltkforms.lib
[FLTK.release.ReleaseDLL]
DEFINES = FL_DLL
LIBPATH = $(ThirdParty_FLTK)\\lib_dll\\releasedll
LIB     = fltkdll.lib
[FLTK.xcode]
INCLUDE = $(ThirdParty_FLTK)/include
DEFINES =
LIBPATH = $(ThirdParty_FLTK)/lib
LIB     = -lfltk -lfltk_gl -lfltk_images -lfltk_forms -framework Carbon


[BerkeleyDB]
INCLUDE = $(ThirdParty_BerkeleyDB)\\include
LIB     = libdb.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
MACRO   = BERKELEYDB_INCLUDE BERKELEYDB_STATIC_LIBS BERKELEYDB_LIBS
[BerkeleyDB.debug.Debug]
LIBPATH = $(ThirdParty_BerkeleyDB)\\lib_static\\debug
[BerkeleyDB.debug.DebugMT]
LIBPATH = $(ThirdParty_BerkeleyDB)\\lib_static\\debugmt
[BerkeleyDB.debug.DebugDLL]
LIBPATH = $(ThirdParty_BerkeleyDB)\\lib_dll\\debugdll
[BerkeleyDB.release.Release]
LIBPATH = $(ThirdParty_BerkeleyDB)\\lib_static\\release
[BerkeleyDB.release.ReleaseMT]
LIBPATH = $(ThirdParty_BerkeleyDB)\\lib_static\\releasemt
[BerkeleyDB.release.ReleaseDLL]
LIBPATH = $(ThirdParty_BerkeleyDB)\\lib_dll\\releasedll
[BerkeleyDB.xcode]
INCLUDE = $(ThirdParty_BerkeleyDB)/include
LIB     = -ldb
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
MACRO   = BERKELEYDB_INCLUDE BERKELEYDB_STATIC_LIBS BERKELEYDB_LIBS
LIBPATH = $(ThirdParty_BerkeleyDB)/lib


[C_ncbi]
INCLUDE = $(ThirdParty_C_ncbi)\\include
LIBPATH =
LIB     =
CONFS   = Debug DebugDLL Release ReleaseDLL
[C_ncbi.debug.Debug]
LIBPATH = $(ThirdParty_C_ncbi)\\Debug
[C_ncbi.debug.DebugDLL]
LIBPATH = $(ThirdParty_C_ncbi)\\DebugDLL
[C_ncbi.release.Release]
LIBPATH = $(ThirdParty_C_ncbi)\\Release
[C_ncbi.release.ReleaseDLL]
LIBPATH = $(ThirdParty_C_ncbi)\\ReleaseDLL


[PYTHON]
INCLUDE = $(ThirdPartyAppsBasePath)\\Python252\\$(msvc_3rd)\\include
LIBPATH = $(ThirdPartyAppsBasePath)\\Python252\\$(msvc_3rd)\\libs
LIB =
CONFS   = DebugDLL ReleaseDLL


[SWIG]
INCLUDE = $(SWIG_PATH )
LIBPATH = $(SWIG_PATH )
LIB =
CONFS   = DebugDLL ReleaseDLL


[OpenSSL]
INCLUDE = $(ThirdParty_OpenSSL)/include
CONFS   = DebugMT DebugDLL ReleaseMT ReleaseDLL
LIBPATH = $(ThirdParty_OpenSSL)/lib/dll
LIB     = ssleay32.lib libeay32.lib
[OpenSSL.debug.DebugMT]
LIBPATH = $(ThirdParty_OpenSSL)\\lib_static\\debugmt
[OpenSSL.debug.DebugDLL]
LIBPATH = $(ThirdParty_OpenSSL)\\lib_dll\\debugdll
[OpenSSL.release.ReleaseMT]
LIBPATH = $(ThirdParty_OpenSSL)\\lib_static\\releasemt
[OpenSSL.release.ReleaseDLL]
LIBPATH = $(ThirdParty_OpenSSL)\\lib_dll\\releasedll


[Iconv]
LIB     =
[Iconv.xcode]
LIB     = -liconv


[CPPUNIT]
INCLUDE = $(ThirdParty_CPPUNIT)\\include
LIB     = cppunit.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[CPPUNIT.debug.Debug]
LIBPATH = $(ThirdParty_CPPUNIT)\\lib_static\\debug
[CPPUNIT.debug.DebugMT]
LIBPATH = $(ThirdParty_CPPUNIT)\\lib_static\\debugmt
[CPPUNIT.debug.DebugDLL]
LIBPATH = $(ThirdParty_CPPUNIT)\\lib_static\\debugdll
[CPPUNIT.release.Release]
LIBPATH = $(ThirdParty_CPPUNIT)\\lib_static\\release
[CPPUNIT.release.ReleaseMT]
LIBPATH = $(ThirdParty_CPPUNIT)\\lib_static\\releasemt
[CPPUNIT.release.ReleaseDLL]
LIBPATH = $(ThirdParty_CPPUNIT)\\lib_static\\releasedll


[Xalan]
INCLUDE = $(ThirdParty_Xalan)\\include
LIB     = xalan-c.lib XalanMessages.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[Xalan.debug.Debug]
LIBPATH = $(ThirdParty_Xalan)\\lib_static\\debug
[Xalan.debug.DebugMT]
LIBPATH = $(ThirdParty_Xalan)\\lib_static\\debugmt
[Xalan.debug.DebugDLL]
DEFINES = XALAN_DLL
LIBPATH = $(ThirdParty_Xalan)\\lib_dll\\debugdll
[Xalan.release.Release]
LIBPATH = $(ThirdParty_Xalan)\\lib_static\\release
[Xalan.release.ReleaseMT]
LIBPATH = $(ThirdParty_Xalan)\\lib_static\\releasemt
[Xalan.release.ReleaseDLL]
DEFINES = XALAN_DLL
LIBPATH = $(ThirdParty_Xalan)\\lib_dll\\releasedll


[ICU]
INCLUDE = $(ThirdParty_ICU)\\include
LIB     = icudt.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[ICU.debug.Debug]
LIBPATH = $(ThirdParty_ICU)\\lib_static\\debug
[ICU.debug.DebugMT]
LIBPATH = $(ThirdParty_ICU)\\lib_static\\debugmt
[ICU.debug.DebugDLL]
DEFINES = ICU_DLL
LIBPATH = $(ThirdParty_ICU)\\lib_dll\\debugdll
[ICU.release.Release]
LIBPATH = $(ThirdParty_ICU)\\lib_static\\release
[ICU.release.ReleaseMT]
LIBPATH = $(ThirdParty_ICU)\\lib_static\\releasemt
[ICU.release.ReleaseDLL]
DEFINES = ICU_DLL
LIBPATH = $(ThirdParty_ICU)\\lib_dll\\releasedll


[Xerces]
INCLUDE = $(ThirdParty_Xerces)\\include
LIB     = xerces-c.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[Xerces.debug.Debug]
DEFINES = XML_LIBRARY
LIBPATH = $(ThirdParty_Xerces)\\lib_static\\debug
[Xerces.debug.DebugMT]
DEFINES = XML_LIBRARY
LIBPATH = $(ThirdParty_Xerces)\\lib_static\\debugmt
[Xerces.debug.DebugDLL]
DEFINES = XERCES_DLL
LIBPATH = $(ThirdParty_Xerces)\\lib_dll\\debugdll
[Xerces.release.Release]
DEFINES = XML_LIBRARY
LIBPATH = $(ThirdParty_Xerces)\\lib_static\\release
[Xerces.release.ReleaseMT]
DEFINES = XML_LIBRARY
LIBPATH = $(ThirdParty_Xerces)\\lib_static\\releasemt
[Xerces.release.ReleaseDLL]
DEFINES = XERCES_DLL
LIBPATH = $(ThirdParty_Xerces)\\lib_dll\\releasedll


[LIBXML]
INCLUDE = $(ThirdParty_XML)\\include
LIB     = libxml2.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[LIBXML.debug.Debug]
LIBPATH = $(ThirdParty_XML)\\lib_static\\debug
[LIBXML.debug.DebugMT]
LIBPATH = $(ThirdParty_XML)\\lib_static\\debugmt
[LIBXML.debug.DebugDLL]
LIBPATH = $(ThirdParty_XML)\\lib_dll\\debugdll
[LIBXML.release.Release]
LIBPATH = $(ThirdParty_XML)\\lib_static\\release
[LIBXML.release.ReleaseMT]
LIBPATH = $(ThirdParty_XML)\\lib_static\\releasemt
[LIBXML.release.ReleaseDLL]
LIBPATH = $(ThirdParty_XML)\\lib_dll\\releasedll
[LIBXML.xcode]
INCLUDE = $(ThirdParty_XML)/include/libxml2
LIB     = -lxml2
LIBPATH = $(ThirdParty_XML)/lib

[LIBXSLT]
INCLUDE = $(ThirdParty_XSLT)\\include
LIB     = libexslt.lib libxslt.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[LIBXSLT.debug.Debug]
LIBPATH = $(ThirdParty_XSLT)\\lib_static\\debug
[LIBXSLT.debug.DebugMT]
LIBPATH = $(ThirdParty_XSLT)\\lib_static\\debugmt
[LIBXSLT.debug.DebugDLL]
LIBPATH = $(ThirdParty_XSLT)\\lib_dll\\debugdll
[LIBXSLT.release.Release]
LIBPATH = $(ThirdParty_XSLT)\\lib_static\\release
[LIBXSLT.release.ReleaseMT]
LIBPATH = $(ThirdParty_XSLT)\\lib_static\\releasemt
[LIBXSLT.release.ReleaseDLL]
LIBPATH = $(ThirdParty_XSLT)\\lib_dll\\releasedll
[LIBXSLT.xcode]
INCLUDE = $(ThirdParty_XSLT)/include
LIB     = -lxslt
LIBPATH = $(ThirdParty_XSLT)/lib

[Boost.Test]
INCLUDE = $(ThirdParty_Boost_Test)\\include
LIB     = boost_unit_test_framework.lib
DEFINES = BOOST_AUTO_LINK_NOMANGLE
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[Boost.Test.debug.Debug]
LIBPATH = $(ThirdParty_Boost_Test)\\lib_static\\debug
[Boost.Test.debug.DebugMT]
LIBPATH = $(ThirdParty_Boost_Test)\\lib_static\\debugmt
[Boost.Test.debug.DebugDLL]
LIBPATH = $(ThirdParty_Boost_Test)\\lib_static\\debugdll
[Boost.Test.release.Release]
LIBPATH = $(ThirdParty_Boost_Test)\\lib_static\\release
[Boost.Test.release.ReleaseMT]
LIBPATH = $(ThirdParty_Boost_Test)\\lib_static\\releasemt
[Boost.Test.release.ReleaseDLL]
LIBPATH = $(ThirdParty_Boost_Test)\\lib_static\\releasedll
[Boost.Test.xcode]
INCLUDE = $(ThirdParty_Boost_Test)/include
LIB     = -lboost_unit_test_framework
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
LIBPATH = $(ThirdParty_Boost_Test)/lib


[Boost.Test.Included]
INCLUDE = $(ThirdParty_Boost_Test)\\include
DEFINES = BOOST_TEST_NO_LIB
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[Boost.Test.xcode]
INCLUDE = $(ThirdParty_Boost_Test)/include
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL


[fastcgi]
INCLUDE = $(ThirdParty_fastcgi)\\include
LIB     = libfcgi.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[fastcgi.debug.Debug]
LIBPATH = $(ThirdParty_fastcgi)\\lib_static\\debug
[fastcgi.debug.DebugMT]
LIBPATH = $(ThirdParty_fastcgi)\\lib_static\\debugmt
[fastcgi.debug.DebugDLL]
LIBPATH = $(ThirdParty_fastcgi)\\lib_static\\debugdll
[fastcgi.release.Release]
LIBPATH = $(ThirdParty_fastcgi)\\lib_static\\release
[fastcgi.release.ReleaseMT]
LIBPATH = $(ThirdParty_fastcgi)\\lib_static\\releasemt
[fastcgi.release.ReleaseDLL]
LIBPATH = $(ThirdParty_fastcgi)\\lib_static\\releasedll


[ncbi_crypt]
CONFS = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
FILES = src\\connect\\ext\\ncbi_crypt.c

[connext]
CONFS = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
FILES = src\\connect\\ext\\Makefile.in

[PubSeqOS]
CONFS = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
FILES = src\\objtools\\data_loaders\\genbank\\pubseq\\Makefile.in

[internal]
FILES = src\\internal\\Makefile.in

[local_lbsm]
FILES = src\\connect\\ncbi_lbsm.c

[DefaultLibs]
INCLUDE =
LIBPATH =
LIB     = ws2_32.lib dbghelp.lib
[DefaultLibs.xcode]
INCLUDE =
LIB     = -framework CoreServices

[COMCTL32]
INCLUDE =
LIBPATH =
LIB     = comctl32.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL

[COMCTL32.xcode]
LIB     =

[WinMain]
FILES = src\\gui\\winmain.cpp

[cgi]
FILES = src/cgi/Makefile.in

[UUID]
INCLUDE =
LIBPATH =
LIB     = uuid.lib
CONFS   = Debug DebugMT DebugDLL Release ReleaseMT ReleaseDLL
[UUID.xcode]
LIB     =


# ===========================================================================
# Datatool description
# It is used to generate C++ code by ASN.1 or DTD specification

[Datatool]
# Use the following set of parameters to use "in-tree" datatool.exe
# This ensures that the datatool is always up-to-date whenever it is needed,
# but makes Debug builds slower
datatool=datatool
Location.App=$(OutDir)\\datatool.exe
Location.Lib=$(OutDir)\\..\\..\\bin\\$(ConfigurationName)\\datatool.exe
Location.xcode=bin/$CONFIGURATION/datatool

# Use the following set of parameters instead of the one above
# to make the build faster by using pre-built datatool.exe (as a result of CONFIGURE)
# NOTE: if you change the code that affects datatool C++ code generator,
#       this exe will not be rebuilt automatically, so
#       you MUST rebuild this exe, for example, by rebuilding CONFIGURE project
#datatool=
#Location.App=$(OutDir)\\..\\..\\..\\static\\bin\\release\\datatool.exe
#Location.Lib=$(OutDir)\\..\\..\\..\\static\\bin\\release\\datatool.exe
#Location.xcode=../static/bin/ReleaseDLL/datatool

CommandLine = -oex \"\" -pch ncbi_pch.hpp -m \"$(InputPath)\" -oA -oc \"$(InputName)\" -od \"$(InputDir)\\$(InputName).def\" -odi -ocvs
CommandLine.xcode = -oex \"\" -oA -odi -ocvs


# ===========================================================================
# Default NCBI resource to include into all app and dll projects
# Must be placed into compiler-specific subdir of compilers subdirectory
# (msvc*_prj)

[DefaultResource]
app = ncbi.rc
