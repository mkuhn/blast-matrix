#################################
# $Id: Makefile.rules.in 124539 2008-04-15 15:41:02Z ucko $
# Author:  Denis Vakatov (vakatov@ncbi.nlm.nih.gov),
#          Aaron Ucko    (ucko@ncbi.nlm.nih.gov)
#################################
#
#  C and C++ compilation rules
#################################

# Requirements checking
requirements:  $(REQUIRES:%=$(status_dir)/%.enabled)


###  C++ compilation
%@obj_ext@: ./%.cpp
	$(CXX_WRAPPER) $(CXX) $(CXXFLAGS_ALL) $< @f_outobj@$@ $(CXX_FILTER)
%@obj_ext@: $(srcdir)/%.cpp
	$(CXX_WRAPPER) $(CXX) $(CXXFLAGS_ALL) $< @f_outobj@$@ $(CXX_FILTER)

###  C compilation
%@obj_ext@: ./%.c
	$(CC_WRAPPER) $(CC) $(CFLAGS_ALL) $< @f_outobj@$@ $(CC_FILTER)
%@obj_ext@: $(srcdir)/%.c
	$(CC_WRAPPER) $(CC) $(CFLAGS_ALL) $< @f_outobj@$@ $(CC_FILTER)

###  Header precompilation
@GCCPCH@pchdir = $(incdir)/common/ncbi_pch_impl.hpp.gch
@GCCPCH@pchsrc = $(includedir0)/common/ncbi_pch_impl.hpp
@GCCPCH@$(pchdir)/normal: $(pchsrc)
@GCCPCH@	mkdir -p $(pchdir)
@GCCPCH@	$(CXX_WRAPPER) $(ORIG_CXX) -xc++-header @f_compile@ $(ORIG_CXXFLAGS) $(ORIG_CPPFLAGS) -DNCBI_PCH__HPP= $(pchsrc) @f_outobj@$@ $(CXX_FILTER)
@GCCPCH@$(pchdir)/dll: $(pchsrc)
@GCCPCH@	mkdir -p $(pchdir)
@GCCPCH@	$(CXX_WRAPPER) $(ORIG_CXX) -xc++-header @f_compile@ $(ORIG_CXXFLAGS) $(CXXFLAGS_DLL) $(ORIG_CPPFLAGS) -DNCBI_PCH__HPP= $(pchsrc) @f_outobj@$@ $(CXX_FILTER)
@GCCPCH@$(pchdir)/fast: $(pchsrc)
@GCCPCH@	mkdir -p $(pchdir)
@GCCPCH@	$(CXX_WRAPPER) $(ORIG_CXX) -xc++-header @f_compile@ $(FAST_CXXFLAGS) $(ORIG_CPPFLAGS) -DNCBI_PCH__HPP= $(pchsrc) @f_outobj@$@ $(CXX_FILTER)
@GCCPCH@$(pchdir)/fastdll: $(pchsrc)
@GCCPCH@	mkdir -p $(pchdir)
@GCCPCH@	$(CXX_WRAPPER) $(ORIG_CXX) -xc++-header @f_compile@ $(FAST_CXXFLAGS) $(CXXFLAGS_DLL) $(ORIG_CPPFLAGS) -DNCBI_PCH__HPP= $(pchsrc) @f_outobj@$@ $(CXX_FILTER)

clean-common:
	-$(RMDIR) SunWS_cache
	-$(RMDIR) ii_files
	-$(RMDIR) ti_files
	-$(RM) .make.state
	-$(RM) $(SOURCES:=.d)
	-$(RM) ir.out

### Header exporting, SSS-style.
# NB: export-headers explicitly uses cp rather than $(bincopy) because
# the whole point is to have build-specific copies of the headers
# guaranteed to be in sync with the corresponding library.

pkg_incdir = $(incdest)/$(PACKAGE_EXPORT)
src_headers = $(HEADER_EXPORT:%=$(srcdir)/%)
exp_headers = $(HEADER_EXPORT:%=$(pkg_incdir)/%)

export-headers: $(exp_headers)

$(pkg_incdir)/%: $(srcdir)/%
	@if [ -n "$(PACKAGE_EXPORT)" -a -n "$(HEADER_EXPORT)" ]; then \
	    test -d $(pkg_incdir)  ||  rm -f $(pkg_incdir); \
	    mkdir -p $(pkg_incdir); \
	    echo cp -fp $< $@; \
	    cp -fp $< $@; \
	fi

purge-headers:
	@-if [ -n "$(PACKAGE_EXPORT)" -a -n "$(HEADER_EXPORT)" ]; then \
	    echo rm -f $(exp_headers); \
	    rm -f $(exp_headers); \
	    cd $(incdest)  &&  rmdir -p $(PACKAGE_EXPORT); \
	fi

.PHONY: clean-common export-headers purge-headers requirements

