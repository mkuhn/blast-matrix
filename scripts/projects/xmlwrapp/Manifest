#
# Filename: Manifest
#
# $Id: Manifest 219129 2011-01-06 16:09:38Z satskyse $
#
# Author: Sergey Satskiy
#
# Purpose: This file holds all the supported configurations of a package
#          It is used by release configurator.
#


APP: event_parsing test_attributes test_document test_event test_namespace test_node test_tree
APP: test_xslt tree_parsing xml_generation xslt_transformation

LIB: libxmlwrapp.a

DEFAULT_CONFIGURATIONS: Linux32-Suse:plain-ICC  Linux64-Suse:plain-ICC  SunOSx86:plain-WS64 SunOSSparc:plain-WS64

# Each line describes a single configuration
# The format is as follows:
# <HardwareIdentifier> : <ReleaseSuffix> : <CompilerConfigurationScriptWithKeys>
# Configuration script is relative to c++/compilers/unix/ .
# Release configurator assumes that this script will eventually call standard configure script and pass all options
# to it. So some standard options may be added by release configurator, such as --build-root-sfx, --with-projects,
# --with-distcc, --with-action etc.

Linux32-Suse    : plain-ICC  : ICC.sh           --without-debug --without-mt --with-static --without-runpath --with-flat-makefile
Linux32-Suse    : plain-GCC  : GCC.sh           --without-debug --without-mt --with-static --without-runpath --with-flat-makefile

Linux64-Suse    : plain-ICC  : ICC.sh           --without-debug --without-mt --with-static --without-runpath --with-flat-makefile
Linux64-Suse    : plain-GCC  : GCC.sh           --without-debug --without-mt --with-static --without-runpath --with-flat-makefile

# FreeBSD32      : plain      : GCC.sh           --without-debug --without-mt --with-static --without-runpath --with-flat-makefile

SunOSx86   : plain-GCC  : GCC.sh           --without-debug --without-mt --with-static --without-runpath --with-flat-makefile
SunOSx86   : plain-WS32 : WorkShop59.sh 32 --without-debug --without-mt --with-static --without-runpath --with-flat-makefile
SunOSx86   : plain-WS64 : WorkShop59.sh 64 --without-debug --without-mt --with-static --without-runpath --with-flat-makefile

SunOSSparc : plain-GCC  : GCC.sh           --without-debug --without-mt --with-static --without-runpath --with-flat-makefile
SunOSSparc : plain-WS32 : WorkShop59.sh 32 --without-debug --without-mt --with-static --without-runpath --with-flat-makefile
SunOSSparc : plain-WS64 : WorkShop59.sh 64 --without-debug --without-mt --with-static --without-runpath --with-flat-makefile

Linux64-Centos    : plain-GCC  : GCC.sh           --without-debug --without-mt --with-static --without-runpath --with-flat-makefile
# Linux32-Ubuntu    : plain-GCC  : GCC.sh           --without-debug --without-mt --with-static --without-runpath --with-flat-makefile

# --with-flat-makefile is ommited for IntelMAC with the test purposes. Should
# work similar to the configurations where it is mentioned explicitly
IntelMAC   : GCC-universal : GCC.sh           --with-universal --without-debug --without-mt --with-static --without-runpath
IntelMAC   : GCC           : GCC.sh           --without-debug --without-mt --with-static --without-runpath

#Win64      : 800-static-64 : msvc800_prj  static  64  ReleaseDLL

#Win64_9    : 900-static-64 : msvc900_prj  static  64  ReleaseDLL
#Win32      : 800-static-32 : msvc800_prj  static  32  ReleaseDLL
#Win32_9    : 900-static-32 : msvc900_prj  static  32  ReleaseDLL
Win64_9    : 900-static-64 : static  64  ReleaseDLL
Win32_9    : 900-static-32 : static  32  ReleaseDLL

XCode      : plain      : Xcode.sh 30

USE_COMPONENTS

